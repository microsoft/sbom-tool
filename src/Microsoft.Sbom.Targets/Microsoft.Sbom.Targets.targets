<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- TODO remove hardcoded str, reference this assembly using MSBuild props instead -->

  <!--TODO we will eventaully want to replace or remove `AfterTargets="Build"`.
        Including this line means that this code will run at the end of `dotnet build`s of any project that this .targets
        file is imported to (see line 24 of Microsoft.Sbom.Targets.csproj as an example of importing this file). This is
        good for testing purposes, but not the behavior we ultimately want. 
        We will need to discuss with the .NET SDK team if they want this target to be automatically included after any
        target and if so, which one. They likely know of a nuget packaging target that it would make sense to hook this in with.-->

  <PropertyGroup>
    <GenerateSbom_TFM Condition=" '$(MSBuildRuntimeType)' == 'Full' ">net472</GenerateSbom_TFM>
    <GenerateSbom_TFM Condition=" '$(MSBuildRuntimeType)' == 'Core' ">net8.0</GenerateSbom_TFM>

    <!--Set the SBOM CLI Tool path. This variable is only used in SbomCLIToolTask.cs-->
    <SbomToolPath Condition=" '$(MSBuildRuntimeType)' == 'Full'">$(MSBuildThisFileDirectory)\..\tasks\$(GenerateSbom_TFM)\sbom-tool</SbomToolPath>
    <ManifestFolderName>_manifest</ManifestFolderName>
    <SbomSpecification>spdx_2.2</SbomSpecification>
  </PropertyGroup>

  <!-- Copy the SBOM files to each respective target framework folder within the .nupkg -->
  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>
      $(TargetsForTfmSpecificBuildOutput);CopySbomOutput
    </TargetsForTfmSpecificBuildOutput>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.sha256</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
  
  <!--Based on the MSBuild runtime, GenerateSbom will either pull the GenerateSbomTask or SbomCLIToolTask logic-->
  <UsingTask TaskName="Microsoft.Sbom.Targets.GenerateSbom" AssemblyFile="$(MSBuildThisFileDirectory)\..\tasks\$(GenerateSbom_TFM)\Microsoft.Sbom.Targets.dll" />

  <Import Project="$(MSBuildThisFileDirectory)\Microsoft.Sbom.Targets.props" />

  <Target Name="GenerateSbomTarget" AfterTargets="Build" Condition=" '$(GenerateSBOM)' ==  'true'">
    <!--TODO: Add arguments for ToolTask-->
    <GenerateSbom
        BuildDropPath="$(SbomGenerationBuildDropPath)"
        BuildComponentPath="$(SbomGenerationBuildComponentPath)"
        PackageSupplier="$(SbomGenerationPackageSupplier)"
        PackageName="$(SbomGenerationPackageName)"
        PackageVersion="$(SbomGenerationPackageVersion)"
        NamespaceBaseUri="$(SbomGenerationNamespaceBaseUri)"
        NamespaceUriUniquePart="$(SbomGenerationNamespaceUriUniquePart)"
        ExternalDocumentListFile="$(SbomGenerationExternalDocumentReferenceListFile)"
        FetchLicenseInformation="$(SbomGenerationFetchLicenseInformation)"
        EnablePackageMetadataParsing="$(SbomGenerationEnablePackageMetadataParsing)"
        Verbosity="$(SbomGenerationVerbosity)"
        ManifestInfo="$(SbomGenerationManifestInfo)"
        DeleteManifestDirIfPresent="$(SbomGenerationDeleteManifestDirIfPresent)"
        ManifestDirPath="$(SbomGenerationManifestDirPath)"
        SbomToolPath="$(SbomToolPath)">
      <Output TaskParameter="SbomPath" PropertyName="SbomPathResult" />
    </GenerateSbom>
    <Message Importance="High" Text="Task result: $(SbomPathResult)" />
  </Target>

  <!-- Specify the SBOM files to copy into the nuget package -->
  <Target Name="CopySbomOutput" DependsOnTargets="GenerateSbomTarget">
    <ItemGroup>
      <!--Add manifest and SHA file from the GenerateSbomTask execution-->
      <BuildOutputInPackage 
								  Include="$(SbomPathResult)\$(SbomSpecification)\manifest.spdx.json"
								  TargetPath="$(ManifestFolderName)/$(SbomSpecification)/manifest.spdx.json"/>
      <BuildOutputInPackage
                  Include="$(SbomPathResult)\$(SbomSpecification)\manifest.spdx.json.sha256"
								  TargetPath="$(ManifestFolderName)/$(SbomSpecification)/manifest.spdx.json.sha256"/>
    </ItemGroup>
  </Target>
</Project>
